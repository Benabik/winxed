#! winxed
// ajax.winxed

// A simplified implementation of the W3C XMLHttpRequest specification.
// See: http://www.w3.org/TR/XMLHttpRequest/

//**********************************************************************

class XMLHttpRequest
{
    // Private
    // Internal usage variables and methods

    var ua;  // Parrot LWP;UserAgent
    var url; // URL specifid in the open method
    var async;

    function init [vtable]()
    {
        self.status = 0;
        self.responseText = '';
        using extern LWP.UserAgent;
    }

    // Public
    // Properties and methods defined by the specification.

    var status;
    var responseText;
    var onreadystatechange;

    function open(string method, string url, int async)
    {
        self.async = async;
        string m = upcase(method);
        if (m != 'GET')
            throw Error('Unsupported method');

        self.url = url;
    }
    function send(var data)
    {
        string url = self.url;
        self.ua = new LWP.UserAgent();
        var resp = self.ua.get(url,
           {
               'Connection' : 'close'
           }:[named,flat]
        );
        self.status = resp.code();
        self.responseText = resp.content();
        if (self.async) {
            var onreadystatechange = self.onreadystatechange;
            onreadystatechange();
        }
    }
}

//**********************************************************************

// main function for testing.

class StChange
{
    var req;

    function invoke[vtable]()
    {
        say('Status changed');
        say('Status: ', self.req.status);
        self.showresp();
    }

    function showresp()
    {
        var req = self.req;
        say('Response: ', req.responseText);
    }
}

function main(var args)
{
    int nargs = elements(args);
    if (nargs < 2)
        Error('No URL');

    int use_async = 1;

    var req = new XMLHttpRequest();
    var stchange = new StChange();
    stchange.req = req;
    req.onreadystatechange = stchange;

    req.open('get', args[1], use_async);
    req.send(null);
    if (! use_async)
        stchange.showresp();
}

// End
