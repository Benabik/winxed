#! winxed

// This example uses the Xlib.pir module that is provided
// in the examples/nci directory of the parrot source.
//
// To execute it directly from command line you can do:
//     winxed -L /parrot_source_dir/examples/nci xlibtest.winxed
//
// To exit close the window or press Esc.

function getKeycode(display, string keyname)
{
    using Xlib.StringToKeysym;
    int keysym = StringToKeysym(keyname);
    return display.KeysymToKeycode(keysym);
}

function xlibtest [main] ()
{
    using extern Xlib;
    using Xlib.DisplayName;
    using Xlib.OpenDisplay;
    using Xlib.newEvent;

    say(DisplayName());
    var display= OpenDisplay();
    say('DefaultScreen: ', display.DefaultScreen());
    int Escape = getKeycode(display, 'Escape');

    var rootwin= display.RootWindow();
    int white= display.WhitePixel();
    var window= display.CreateSimpleWindow(rootwin, 0, 0, 600, 400, 0, 0, white);

    // KeyPressMask, ButtonPressMask, ButtonReleaseMask, PointerMotionMask,
    // ExposureMask
    window.SelectInput(1 | 4 | 8 | 64 | 32768);
    window.StoreName('Hello, winxed!');

    window.Map();

    int pressed= 0;
    int looping= 1;
    int oldx;
    int oldy;

    var listline = [];
    var line;
    var event= newEvent();
    while (looping)
    {
        display.NextEvent(event);
        int t= event.type();
        switch(t) {
        case 4: // ButtonPress
            pressed= 1;
            oldx= event.x();
            oldy= event.y();
            line = new 'ResizablePMCArray';
            listline.push(line);
            line.push(oldx);
            line.push(oldy);
            window.DrawPoint(oldx, oldy);
            break;
        case 5: // ButtonRelease
            pressed= 0;
            break;
        case 6: // MotionNotify
            if (pressed)
            {
                int x= event.x();
                int y= event.y();
                if (x != oldx || y != oldy)
                {
                    window.DrawLine(oldx, oldy, x, y);
                    oldx= x; oldy= y;
                    line.push(oldx);
                     line.push(oldy);
                }
            }
            break;
        case 12: // Expose
            var l;
            for (l in listline)
            {
                int n= l;
                if (n > 2)
                {
                    int px= l[0];
                    int py= l[1];
                    int i= 2;
                    while (i < l)
                    {
                        int nx=l[i];
                        ++i;
                        int ny=l[i];
                        window.DrawLine(px, py, nx, ny);
                        px= nx; py= ny;
                        ++i;
                    }
                }
                else
                    window.DrawPoint(l[0], l[1]);
            }
        break;
        case 33: // ClientMessage
            looping= 0;
            break;
        case 2: // KeyPress
            if (event.keycode() == Escape)
                looping= 0;
            break;
        default:
            say('Hi');
        }
    }
    window.Unmap();
    window.Destroy();
    display.Close();
}
